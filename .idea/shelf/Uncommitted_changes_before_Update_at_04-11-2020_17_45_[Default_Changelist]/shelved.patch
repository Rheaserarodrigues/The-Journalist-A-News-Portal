Index: templates/Navbar.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% load static %}\r\n\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>The Journalist</title>\r\n    <link href=\"{% static '/css/css_auth.css' %}\" rel=\"stylesheet\">\r\n    <link rel=\"icon\" href=\"{% static '/assets/news.png' %}\"/>\r\n    <link href=\"{% static '/css/index_style2.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/newsCard.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/top_story.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/business.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/education.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/health.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/technology1.css' %}\" rel=\"stylesheet\">\r\n     <link href=\"{% static '/css/posts1.css' %}\" rel=\"stylesheet\">\r\n<<<<<<< HEAD\r\n    <link href=\"{% static '/css/prevpost.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/india1.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/world1.css' %}\" rel=\"stylesheet\">\r\n=======\r\n    <link href=\"{% static '/css/india.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/world.css' %}\" rel=\"stylesheet\">\r\n>>>>>>> fb31c2b3c39794cfb014ec324a522efe4f314049\r\n    <link href=\"{% static '/css/Footer.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/drawer.css' %}\" rel=\"stylesheet\">\r\n    <link href=\"{% static '/css/navbar.css' %}\" rel=\"stylesheet\">\r\n\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Lato&display=swap\" rel=\"stylesheet\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Cinzel&display=swap\" rel=\"stylesheet\">\r\n\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.0.5/css/boxicons.min.css' rel='stylesheet'>\r\n    <style>\r\n        .custom-icon-class-style {\r\n            margin-right: 5px;\r\n            margin-bottom: -2px;\r\n        }\r\n    </style>\r\n\r\n</head>\r\n<body style=\"\r\n background-color: #303841;\r\n \">\r\n\r\n<div style=\"\r\n        width: 100%;\r\n        height:50px;\r\n        padding: 20px;\r\n        border-radius: 10px;\r\n        margin-bottom: 20px;\r\n        text-align: center;\" class=\"header-class\">\r\n    <h1\r\n            style=\"margin-top: -12px;\r\n        font-family: 'Cinzel', serif;\r\n        color:  #eeeeee;\r\n        \">The Journalist</h1>\r\n</div>\r\n\r\n<div id=\"mySidenav\" class=\"sidenav\">\r\n    <div style=\"text-align: start;\">\r\n        <div style=\"\r\n    background: rgba(255,255,255,0.3);\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 50%;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    padding: 70px 0;\r\n    font-family: 'Inter', sans-serif;\r\n    font-size: 20px;\r\n    color:#eeeeee;\r\n\">\r\n\r\n            {{ user.first_name }}\r\n            <br/>\r\n            {{ user.last_name }}\r\n\r\n\r\n        </div>\r\n        <hr>\r\n        <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeDrawer()\">&times;</a>\r\n        <a style=\"margin-top:25px \" href=\"{% url 'profile' %}\"><img class=\"custom-icon-class-style\"\r\n                                                                    src=\"{% static '/assets/account.png' %}\" alt=\"\">Profile</a>\r\n        {% if user.journal_access %}\r\n        <a href=\"{% url 'posts' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/postnews.png' %}\"\r\n                                         alt=\"\">Post\r\n            Article</a>\r\n        <a href=\"{% url 'prevpost' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/journal.png' %}\" alt=\"\">Previous Posts</a>\r\n        {% endif %}\r\n        <a href=\"{% url 'logout' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/logout.png' %}\"\r\n                                          alt=\"\">Log Out</a>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"topnav\" id=\"myTopnav\">\r\n    <a href=\"{% url 'home' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/current.png' %}\" alt=\"\">Latest</a>\r\n    <a href=\"{% url 'india' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/india.png' %}\" alt=\"\">India</a>\r\n    <a href=\"{% url 'education' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/education.png' %}\"\r\n                                         alt=\"\">Education</a>\r\n    <a href=\"{% url 'business' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/business.png' %}\"\r\n                                        alt=\"\">Business</a>\r\n\r\n    <a href=\"{% url 'world' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/world.png' %}\" alt=\"\">World</a>\r\n    <a href=\"{% url 'technology' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/connect.png' %}\"\r\n                                          alt=\"\">Technology</a>\r\n    <a href=\"{% url 'health' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/hospital.png' %}\" alt=\"\">Health</a>\r\n    {% if user.suscriber_access %}\r\n    <a style=\"justify-content:flex-end;\" href=\"javascript:void(0)\" onclick=\"openDrawer()\"><img style=\"margin-right: 5px;\r\n\r\n            margin-bottom: -5px;\"\r\n                                                                                               src=\"{% static '/assets/profile.png' %}\"\r\n                                                                                               alt=\"\">Profile</a>\r\n    {% else %}\r\n    <a href=\"{% url 'login' %}\"><img class=\"custom-icon-class-style\" src=\"{% static '/assets/pen.png' %}\" alt=\"\">Sign\r\n        In/Up</a>\r\n    {% endif %}\r\n    <a href=\"javascript:void(0);\" style=\"font-size:15px;\" class=\"icon\" onclick=\"myFunction()\">&#9776;</a>\r\n\r\n<hr style=\"height: 7px; color: #d72323; background-color: #d72323; border-color: #d72323\">\r\n\r\n</div>\r\n\r\n</body>\r\n{% block content %}\r\n\r\n{% endblock %}\r\n\r\n\r\n<script src=\"{% static '/js/script.js' %}\"></script>\r\n<script>\r\n    function myFunction() {\r\n        var x = document.getElementById(\"myTopnav\");\r\n        if (x.className === \"topnav\") {\r\n            x.className += \" responsive\";\r\n        } else {\r\n            x.className = \"topnav\";\r\n        }\r\n    }\r\n\r\n\r\n    function openDrawer() {\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    }\r\n\r\n    function closeDrawer() {\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    }\r\n</script>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/Navbar.html	(revision 3d9442f8181bad229d8879b7fa6a71ce3026dc4f)
+++ templates/Navbar.html	(date 1604489833781)
@@ -15,14 +15,13 @@
     <link href="{% static '/css/health.css' %}" rel="stylesheet">
     <link href="{% static '/css/technology1.css' %}" rel="stylesheet">
      <link href="{% static '/css/posts1.css' %}" rel="stylesheet">
-<<<<<<< HEAD
+
     <link href="{% static '/css/prevpost.css' %}" rel="stylesheet">
-    <link href="{% static '/css/india1.css' %}" rel="stylesheet">
-    <link href="{% static '/css/world1.css' %}" rel="stylesheet">
-=======
+
+
     <link href="{% static '/css/india.css' %}" rel="stylesheet">
     <link href="{% static '/css/world.css' %}" rel="stylesheet">
->>>>>>> fb31c2b3c39794cfb014ec324a522efe4f314049
+
     <link href="{% static '/css/Footer.css' %}" rel="stylesheet">
     <link href="{% static '/css/drawer.css' %}" rel="stylesheet">
     <link href="{% static '/css/navbar.css' %}" rel="stylesheet">
Index: posts/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render, redirect\r\nimport requests\r\nfrom django.db import connection\r\nimport random\r\nimport math\r\nimport mysql.connector\r\n\r\n\r\ndef cell_list(prefix, get_range):\r\n    list_cell_string = []\r\n    for i in get_range:\r\n        cell_string = prefix + \"-cell-\"\r\n        cell_string += str(i)\r\n        list_cell_string.append(cell_string)\r\n    return list_cell_string\r\n\r\n\r\ndef OTPgen():\r\n    nums = '0123456789'\r\n    otp = \"\"\r\n\r\n    for i in range(8):\r\n        otp += nums[math.floor(random.random() * 10)]\r\n    return otp\r\n\r\n\r\ndef EditContent(string):\r\n    new_string = string.replace(\"'\", \"\\\\'\")\r\n    new_string = new_string.replace(\"\\\"\", \"\\\\\\\"\")\r\n    return new_string\r\n\r\n\r\ndef posts_view(request, *args, **kwargs):\r\n    global dict_of_user_details\r\n    latest_cell = cell_list('latest', range(1, 12))\r\n    health_cell = cell_list('health', range(1, 10))\r\n    world_cell = cell_list('world', range(1, 11))\r\n    business_cell = cell_list('business', range(1, 9))\r\n    tech_cell = cell_list('technology', range(1, 11))\r\n    edu_cell = cell_list('education', range(1, 9))\r\n    india_cell = cell_list('india', range(1, 11))\r\n    dictionary_of_section_as_per_category = {\r\n        'latest': latest_cell,\r\n        'health': health_cell,\r\n        'world': world_cell,\r\n        'business': business_cell,\r\n        'technology': tech_cell,\r\n        'education': edu_cell,\r\n        'india': india_cell\r\n    }\r\n\r\n    if request.session.has_key('logged_in'):\r\n        dict_of_user_details = {\r\n            'admin_access': request.session['admin_access'],\r\n            'journal_access': request.session['journal_access'],\r\n            'logged_in': request.session['logged_in'],\r\n            'first_name': request.session['first_name'],\r\n            'last_name': request.session['last_name'],\r\n            'email_id': request.session['email_id'],\r\n            'suscriber_access': request.session['suscriber_priority'],\r\n            'profile_picture': request.session['profile_picture']\r\n\r\n        }\r\n\r\n        # print(binary,letter_binary)\r\n\r\n    if request.method == 'POST':\r\n\r\n        article_image_link = request.POST.get('imageLink')\r\n        article_title = request.POST.get('postTitle')\r\n        article_category = request.POST.get('category')\r\n        article_section = request.POST.get('section')\r\n        article_content = request.POST.get('postDesc')\r\n        article_file_picture = request.POST.get('finalPictureValue')\r\n        print(\"THis is\", article_category)\r\n        if article_category == '' or article_category is None:\r\n            message = \"Choose A Category\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n        if article_section == '' or article_section is None:\r\n            message = \"Choose A Category\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n        if article_image_link == '' and article_file_picture == '':\r\n            message = \"Enter Image Link or Select An Image\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n\r\n        file1 = open('textfile.txt', 'a+')\r\n        file1.seek(0)\r\n        with connection.cursor() as cursor:\r\n            while 1:\r\n                addotp = OTPgen()\r\n                file1.seek(0)\r\n                if addotp in file1.read():\r\n                    print(\"exists\", addotp)\r\n                    continue\r\n                else:\r\n                    file1.write(addotp + \"\\n\")\r\n                    # file1.write(\"\\n\")\r\n                    if article_category.split('-')[0] == 'latest' and article_section == 'latest-cell-1':\r\n                        cursor.execute('CALL news_database.latest_top_stories(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print(\"latest-cell-1\")\r\n                    elif article_category.split('-')[0] == 'latest':\r\n                        cursor.execute('CALL news_database.update_latest_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('latest')\r\n                    elif article_category.split('-')[0] == 'india':\r\n                        cursor.execute('CALL news_database.update_india_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('india')\r\n                    elif article_category.split('-')[0] == 'education':\r\n                        cursor.execute('CALL news_database.update_education_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('education')\r\n                    elif article_category.split('-')[0] == 'business':\r\n                        cursor.execute('CALL news_database.update_business_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('business')\r\n                    elif article_category.split('-')[0] == 'world':\r\n                        cursor.execute('CALL news_database.update_world_grid(\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",\"%s\",%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('world')\r\n                    elif article_category.split('-')[0] == 'technology':\r\n                        print(\"Entering Technology Cursor For Execution\")\r\n                        print(article_image_link,\r\n                              article_title,\r\n                              article_category,\r\n                              article_section, addotp\r\n                              )\r\n                        cursor.execute(\r\n                            'CALL news_database.update_technology_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                            [article_title, article_file_picture, article_image_link, article_content,\r\n                             dict_of_user_details['email_id'], article_category, article_section,\r\n                             addotp])\r\n\r\n                        print('technology')\r\n                    elif article_category.split('-')[0] == 'health':\r\n                        cursor.execute('CALL news_database.update_health_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link, article_content,\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('health')\r\n                    else:\r\n                        print(\"Un-Successfull\")\r\n\r\n                    context_of_top_stories = {\"registration_success\": True, 'user': dict_of_user_details,\r\n                                              'cell_list': dictionary_of_section_as_per_category}\r\n                    return render(request, 'posts.html', context_of_top_stories)\r\n\r\n        print(article_image_link,\r\n              article_title,\r\n              article_category,\r\n              article_section,\r\n              )\r\n\r\n        print(\"clean\")\r\n\r\n    context_of_top_stories = {\"registration_success\": False, 'user': dict_of_user_details,\r\n                              'cell_list': dictionary_of_section_as_per_category}\r\n    return render(request, 'posts.html', context_of_top_stories)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- posts/views.py	(revision 3d9442f8181bad229d8879b7fa6a71ce3026dc4f)
+++ posts/views.py	(date 1604491909900)
@@ -3,7 +3,7 @@
 from django.db import connection
 import random
 import math
-import mysql.connector
+
 
 
 def cell_list(prefix, get_range):
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8 (djangoProject)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 3d9442f8181bad229d8879b7fa6a71ce3026dc4f)
+++ .idea/misc.xml	(date 1604489834224)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (djangoProject)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/INPminiproject.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"django\" name=\"Django\">\r\n      <configuration>\r\n        <option name=\"rootFolder\" value=\"$MODULE_DIR$\" />\r\n        <option name=\"settingsModule\" value=\"INPminiproject/settings.py\" />\r\n        <option name=\"manageScript\" value=\"$MODULE_DIR$/manage.py\" />\r\n        <option name=\"environment\" value=\"&lt;map/&gt;\" />\r\n        <option name=\"doNotUseTestRunner\" value=\"false\" />\r\n        <option name=\"trackFilePattern\" value=\"migrations\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.8 (djangoProject)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n  <component name=\"TemplatesService\">\r\n    <option name=\"TEMPLATE_CONFIGURATION\" value=\"Django\" />\r\n    <option name=\"TEMPLATE_FOLDERS\">\r\n      <list>\r\n        <option value=\"$MODULE_DIR$/posts/templates\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/INPminiproject.iml	(revision 3d9442f8181bad229d8879b7fa6a71ce3026dc4f)
+++ .idea/INPminiproject.iml	(date 1604489834166)
@@ -14,7 +14,7 @@
   </component>
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 3.8 (djangoProject)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
