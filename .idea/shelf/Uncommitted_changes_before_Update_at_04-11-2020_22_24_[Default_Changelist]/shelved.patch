Index: homepage/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import connection\r\nfrom django.shortcuts import render\r\nimport requests\r\n\r\n\r\ndef boolean_function(s):\r\n    return True if s == 1 else False\r\n\r\n\r\n# Create your views here.\r\ndef home_view(request, *args, **kwargs):\r\n    # top_stories = \"https://newsapi.org/v2/top-headlines?country=in&apiKey=95c4ed43f7644dc8a05175665cd04b7a\"\r\n    # # 95c4ed43f7644dc8a05175665cd04b7a - api key\r\n    # r = requests.get(top_stories).json()\r\n    top = []\r\n    with connection.cursor() as cursor:\r\n        cursor.execute(\"SELECT * FROM top_stories\")\r\n        row = cursor.fetchall()\r\n\r\n    for i in row:\r\n        top_story = {\r\n            'id':i[8],\r\n            'title': i[1],\r\n            'image':i[2],\r\n            'image_link': i[3],\r\n            'section': i[7],\r\n            'category': i[6],\r\n            'news_unique_id': i[8]\r\n        }\r\n        top.append(top_story)\r\n    if request.session.has_key('logged_in'):\r\n        print(request.session.has_key('logged_in'))\r\n        dict_of_user_details = {\r\n            'admin_access': request.session['admin_access'],\r\n            'journal_access': request.session['journal_access'],\r\n            'logged_in': request.session['logged_in'],\r\n            'first_name': request.session['first_name'],\r\n            'last_name': request.session['last_name'],\r\n            'email_id': request.session['email_id'],\r\n            'suscriber_access': request.session['suscriber_priority'],\r\n            'profile_picture':request.session['profile_picture']\r\n\r\n        }\r\n        context_of_top_stories = {'top_stories': top, 'user': dict_of_user_details}\r\n        return render(request, \"index.html\", context_of_top_stories)\r\n    context_of_top_stories = {'top_stories': top}\r\n    return render(request, \"index.html\", context_of_top_stories)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- homepage/views.py	(revision d397df1ffb72f1cf09175d68482474fc3b3a8ea8)
+++ homepage/views.py	(date 1604506786862)
@@ -19,9 +19,9 @@
 
     for i in row:
         top_story = {
-            'id':i[8],
+            'id': i[8],
             'title': i[1],
-            'image':i[2],
+            'image': i[2],
             'image_link': i[3],
             'section': i[7],
             'category': i[6],
@@ -38,7 +38,7 @@
             'last_name': request.session['last_name'],
             'email_id': request.session['email_id'],
             'suscriber_access': request.session['suscriber_priority'],
-            'profile_picture':request.session['profile_picture']
+            'profile_picture': request.session['profile_picture']
 
         }
         context_of_top_stories = {'top_stories': top, 'user': dict_of_user_details}
Index: posts/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render, redirect\r\nimport requests\r\nfrom django.db import connection\r\nimport random\r\nimport math\r\n\r\n\r\n\r\ndef cell_list(prefix, get_range):\r\n    list_cell_string = []\r\n    for i in get_range:\r\n        cell_string = prefix + \"-cell-\"\r\n        cell_string += str(i)\r\n        list_cell_string.append(cell_string)\r\n    return list_cell_string\r\n\r\n\r\ndef OTPgen():\r\n    nums = '0123456789'\r\n    otp = \"\"\r\n\r\n    for i in range(8):\r\n        otp += nums[math.floor(random.random() * 10)]\r\n    return otp\r\n\r\n\r\ndef EditContent(string):\r\n    new_string = string.replace(\"'\", \"\\\\'\")\r\n    new_string = new_string.replace(\"\\\"\", \"\\\\\\\"\")\r\n    return new_string\r\n\r\n\r\ndef posts_view(request, *args, **kwargs):\r\n    global dict_of_user_details\r\n    latest_cell = cell_list('latest', range(1, 12))\r\n    health_cell = cell_list('health', range(1, 10))\r\n    world_cell = cell_list('world', range(1, 11))\r\n    business_cell = cell_list('business', range(1, 9))\r\n    tech_cell = cell_list('technology', range(1, 11))\r\n    edu_cell = cell_list('education', range(1, 9))\r\n    india_cell = cell_list('india', range(1, 11))\r\n    dictionary_of_section_as_per_category = {\r\n        'latest': latest_cell,\r\n        'health': health_cell,\r\n        'world': world_cell,\r\n        'business': business_cell,\r\n        'technology': tech_cell,\r\n        'education': edu_cell,\r\n        'india': india_cell\r\n    }\r\n\r\n    if request.session.has_key('logged_in'):\r\n        dict_of_user_details = {\r\n            'admin_access': request.session['admin_access'],\r\n            'journal_access': request.session['journal_access'],\r\n            'logged_in': request.session['logged_in'],\r\n            'first_name': request.session['first_name'],\r\n            'last_name': request.session['last_name'],\r\n            'email_id': request.session['email_id'],\r\n            'suscriber_access': request.session['suscriber_priority'],\r\n            'profile_picture': request.session['profile_picture']\r\n\r\n        }\r\n\r\n        # print(binary,letter_binary)\r\n\r\n    if request.method == 'POST':\r\n\r\n        article_image_link = request.POST.get('imageLink')\r\n        article_title = request.POST.get('postTitle')\r\n        article_category = request.POST.get('category')\r\n        article_section = request.POST.get('section')\r\n        article_content = request.POST.get('postDesc')\r\n        article_file_picture = request.POST.get('finalPictureValue')\r\n        print(\"THis is\", article_category)\r\n        if article_category == '' or article_category is None:\r\n            message = \"Choose A Category\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n        if article_section == '' or article_section is None:\r\n            message = \"Choose A Category\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n        if article_image_link == '' and article_file_picture == '':\r\n            message = \"Enter Image Link or Select An Image\"\r\n            context = {\"registration_success\": False, 'cell_list': dictionary_of_section_as_per_category,\r\n                       'message': message}\r\n            return render(request, 'posts.html', context)\r\n\r\n        file1 = open('textfile.txt', 'a+')\r\n        file1.seek(0)\r\n        with connection.cursor() as cursor:\r\n            while 1:\r\n                addotp = OTPgen()\r\n                file1.seek(0)\r\n                if addotp in file1.read():\r\n                    print(\"exists\", addotp)\r\n                    continue\r\n                else:\r\n                    file1.write(addotp + \"\\n\")\r\n                    # file1.write(\"\\n\")\r\n                    if article_category.split('-')[0] == 'latest' and article_section == 'latest-cell-1':\r\n                        cursor.execute('CALL news_database.latest_top_stories(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print(\"latest-cell-1\")\r\n                    elif article_category.split('-')[0] == 'latest':\r\n                        cursor.execute('CALL news_database.update_latest_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('latest')\r\n                    elif article_category.split('-')[0] == 'india':\r\n                        cursor.execute('CALL news_database.update_india_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('india')\r\n                    elif article_category.split('-')[0] == 'education':\r\n                        cursor.execute('CALL news_database.update_education_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('education')\r\n                    elif article_category.split('-')[0] == 'business':\r\n                        cursor.execute('CALL news_database.update_business_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('business')\r\n                    elif article_category.split('-')[0] == 'world':\r\n                        cursor.execute('CALL news_database.update_world_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link,\r\n                                        EditContent(article_content),\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('world')\r\n                    elif article_category.split('-')[0] == 'technology':\r\n                        print(\"Entering Technology Cursor For Execution\")\r\n                        print(article_image_link,\r\n                              article_title,\r\n                              article_category,\r\n                              article_section, addotp\r\n                              )\r\n                        cursor.execute(\r\n                            'CALL news_database.update_technology_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                            [article_title, article_file_picture, article_image_link, article_content,\r\n                             dict_of_user_details['email_id'], article_category, article_section,\r\n                             addotp])\r\n\r\n                        print('technology')\r\n                    elif article_category.split('-')[0] == 'health':\r\n                        cursor.execute('CALL news_database.update_health_grid(%s,%s,%s,%s,%s,%s,%s,%s)',\r\n                                       [article_title, article_file_picture, article_image_link, article_content,\r\n                                        dict_of_user_details['email_id'], article_category, article_section,\r\n                                        addotp])\r\n                        print('health')\r\n                    else:\r\n                        print(\"Un-Successfull\")\r\n\r\n                    context_of_top_stories = {\"registration_success\": True, 'user': dict_of_user_details,\r\n                                              'cell_list': dictionary_of_section_as_per_category}\r\n                    return render(request, 'posts.html', context_of_top_stories)\r\n\r\n        print(article_image_link,\r\n              article_title,\r\n              article_category,\r\n              article_section,\r\n              )\r\n\r\n        print(\"clean\")\r\n\r\n    context_of_top_stories = {\"registration_success\": False, 'user': dict_of_user_details,\r\n                              'cell_list': dictionary_of_section_as_per_category}\r\n    return render(request, 'posts.html', context_of_top_stories)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- posts/views.py	(revision d397df1ffb72f1cf09175d68482474fc3b3a8ea8)
+++ posts/views.py	(date 1604506646975)
@@ -26,7 +26,7 @@
 
 def EditContent(string):
     new_string = string.replace("'", "\\'")
-    new_string = new_string.replace("\"", "\\\"")
+    # new_string = new_string.replace("\"", "\\\"")
     return new_string
 
 
